jms_security_extra:
    secure_all_services: false
    expressions: true
    
security:
    firewalls:
      secured_area:
          pattern:    ^/
          anonymous: ~
#          http_basic:
#              realm: "Secured Demo Area"
          form_login:
            login_path:  login
            check_path:  login_check
            default_target_path: /schemas
          logout:
            path:   /logout
            target: /schemas
            invalidate_session: true

    access_control:
      - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/users, roles: ROLE_ADMIN }
      - { path: ^/document, roles: ROLE_USER }
      - { path: ^/fields, roles: ROLE_USER }
      - { path: ^/, roles: ROLE_USER }

    providers:
      chain_provider:
            chain:
                providers: [in_memory, user_db]
      user_db:
         entity: { class: CrudforgeBundle:Users, property: username }
      in_memory:
          memory:
              users:
                  admin: { password: unifieo, roles: ['ROLE_ADMIN', 'ROLE_USER'] }

    encoders:
      Crudforge\CrudforgeBundle\Entity\Users: sha1
      Symfony\Component\Security\Core\User\User: plaintext
    role_hierarchy:          
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    acl:
        connection: default
#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: /demo/secured/login_check
#                login_path: /demo/secured/login
#            logout:
#                path:   /demo/secured/logout
#                target: /demo/
#            #anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"
#
#    access_control:
#        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
#        #
#        # You must uncomment the two following rules to restrict access to paths
#        # starting with the /_internal prefix to only localhost
#        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
#        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
